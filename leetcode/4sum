class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
   int n = nums.size() , t=target;
   sort(nums.begin(), nums.end());
    vector<vector<int>>ans;
    for (int i = 0; i < n; ++i)
    {
        for (int j = i + 1 ; j < n ; j++) {
            int l = j + 1 , r = n - 1 ;
            while (l < r) {
                vector<int>temp;
                long long int a = nums[i] , b = nums[j] , c = nums[l] , d = nums[r];
                long long int sum = c + d ;
                long long int target = t - a - b ;
                if (sum == target) {
                    temp.push_back(a);
                    temp.push_back(b);
                    temp.push_back(c);
                    temp.push_back(d);
                    ans.push_back(temp);
                    while (l < r && nums[l] == nums[l + 1])
                        l++;
                    while (l < r && nums[r] == nums[r - 1])
                        r--;
                    l++ , r--;
                }
                else if (sum > target) r--;
                else l++;
            }
         while (j + 1 < n && nums[j + 1] == nums[j])j++;
        }
    while(i + 1 < n && nums[i + 1] == nums[i])i++;
    }
       return ans;
    }
};
